apiVersion: v1
kind: Template
metadata:
  name: forum-apps
labels:
  template: forum-apps
  group: forum
metadata:
  annotations:
    description: LATAM Red Hat Forum 2016. Example of different MicroServices
    iconClass: icon-jenkins
    tags: brms cars flights fuse hotels
  name: forum-apps
parameters:
- name: "GOGS_URL"
  displayName: Gogs URL
  description: "Gogs is a Git Repository Server where it contains all the source code"
  value: http://gogs.tooling.svc.cluster.local:3000
  required: true
- name: "NEXUS_URL"
  displayName: Nexus URL
  description: "Nexus is a Artifact Repository, which serves other applications during compilation"
  value: http://nexus.tooling.svc.cluster.local:8081
  required: true
- name: "REPOSITORY_USER"
  displayName: Repository User
  required: true
  description: "The username used in Gogs's Repository"
  value: demo
objects:
# BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS 
#    BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS BRMS 
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: brms
      template: decisionserver63-basic-s2i
      xpaas: 1.3.3
    name: brms
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: brms
- apiVersion: v1
  id: brms-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: brms
      template: decisionserver63-basic-s2i
      xpaas: 1.3.3
    name: brms
  spec:
    host: ""
    to:
      name: brms
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: brms
      template: decisionserver63-basic-s2i
      xpaas: 1.3.3
    name: brms
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: brms
      template: decisionserver63-basic-s2i
      xpaas: 1.3.3
    name: brms
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: brms:latest
    source:
      contextDir: discountRules
      git:
        ref: master
        uri: ${GOGS_URL}/${REPOSITORY_USER}/brms.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: KIE_CONTAINER_DEPLOYMENT
          value: c2=techoffice:discountRules:1.0
        - name: MAVEN_MIRROR_URL
          value: ${NEXUS_URL}/content/groups/forum
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-decisionserver63-openshift:latest
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: rCTtNecX
      type: GitHub
    - generic:
        secret: lRhcmaaa
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: brms
      template: decisionserver63-basic-s2i
      xpaas: 1.3.3
    name: brms
  spec:
    replicas: 1
    selector:
      deploymentConfig: brms
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: brms
          deploymentConfig: brms
        name: brms
      spec:
        containers:
        - env:
          - name: KIE_CONTAINER_DEPLOYMENT
            value: c2=techoffice:discountRules:1.0
          - name: KIE_SERVER_USER
            value: pablo
          - name: KIE_SERVER_PASSWORD
            value: jboss#1!
          - name: HORNETQ_CLUSTER_PASSWORD
            value: 78bsk4EJ
          - name: HORNETQ_QUEUES
            value: ""
          - name: HORNETQ_TOPICS
            value: ""
          image: brms
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
          name: brms
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh

        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - brms
        from:
          kind: ImageStream
          name: brms
      type: ImageChange
    - type: ConfigChange
# CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS 
#    CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS CARS 
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: cars
      template: aspnet-s2i-carws
    name: cars
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: aspnet-s2i-carws
    name: s2i-aspnet
  spec:
    dockerImageRepository: registry.access.redhat.com/dotnet/dotnetcore-10-rhel7
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: cars
      template: aspnet-s2i-carws
    name: cars
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: cars:latest
    resources: {}
    source:
      contextDir: CarWS
      git:
        ref: master
        uri: ${GOGS_URL}/${REPOSITORY_USER}/forum.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: s2i-aspnet:latest
      type: Source
    triggers:
    - github:
        secret: GGd7nOi8
      type: GitHub
    - generic:
        secret: ECXMMVn5
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: cars
    name: cars
  spec:
    ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      deploymentconfig: cars
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: cars
      template: aspnet-s2i-carws
    name: cars
  spec:
    replicas: 1
    selector:
      deploymentconfig: cars
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: cars
          deploymentconfig: cars
      spec:
        containers:
        - image: cars
          imagePullPolicy: Always
          name: cars
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - cars
        from:
          kind: ImageStreamTag
          name: cars:latest
      type: ImageChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      template: aspnet-s2i-carws
    name: cars
  spec:
    host: ""
    to:
      kind: Service
      name: cars
# FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS 
#    FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS FLIGHTS 
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: flights
      template: eap64-basic-s2i
      xpaas: 1.2.0
    name: flights
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: flights
- apiVersion: v1
  id: flights-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: flights
      template: eap64-basic-s2i
      xpaas: 1.2.0
    name: flights
  spec:
    host: ""
    to:
      name: flights
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: flights
      template: eap64-basic-s2i
      xpaas: 1.2.0
    name: flights
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: flights
      template: eap64-basic-s2i
      xpaas: 1.2.0
    name: flights
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: flights:latest
    source:
      contextDir: FlightWS
      git:
        ref: master
        uri: ${GOGS_URL}/${REPOSITORY_USER}/forum.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${NEXUS_URL}/content/groups/forum
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-eap64-openshift:1.2
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: kXRw36Po
      type: GitHub
    - generic:
        secret: BM0a0R0L
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: flights
      template: eap64-basic-s2i
      xpaas: 1.2.0
    name: flights
  spec:
    replicas: 1
    selector:
      deploymentConfig: flights
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: flights
          deploymentConfig: flights
        name: flights
      spec:
        containers:
        - env:
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: application=flights
          - name: OPENSHIFT_KUBE_PING_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: HORNETQ_CLUSTER_PASSWORD
            value: MMYrOHFj
          - name: HORNETQ_QUEUES
            value: ""
          - name: HORNETQ_TOPICS
            value: ""
          - name: JGROUPS_CLUSTER_PASSWORD
            value: IBJR7FeV
          image: flights
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
          name: flights
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - flights
        from:
          kind: ImageStream
          name: flights
      type: ImageChange
    - type: ConfigChange
# HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS 
#    HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS HOTELS 
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      application: hotels
    name: hotels
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: hotels
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
    labels:
      application: hotels
    name: hotels
  spec:
    host: ""
    to:
      name: hotels
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: hotels
    name: hotels
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: hotels
    name: hotels
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: hotels:latest
    source:
      contextDir: HotelWS
      git:
        ref: master
        uri: ${GOGS_URL}/${REPOSITORY_USER}/forum.git
      type: Git
    strategy:
      sourceStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: php:latest
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: kXRw36Po
      type: GitHub
    - generic:
        secret: BM0a0R0L
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: hotels
    name: hotels
  spec:
    replicas: 1
    selector:
      deploymentConfig: hotels
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: hotels
          deploymentConfig: hotels
        name: hotels
      spec:
        containers:
        - env:
          image: hotels
          imagePullPolicy: Always
          name: hotels
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: 200m
            requests:
              cpu: 100m
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - hotels
        from:
          kind: ImageStream
          name: hotels
      type: ImageChange
    - type: ConfigChange
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
   labels:
     application: hotels
   name: hotels
  spec:
   maxReplicas: 5
   minReplicas: 1
   scaleTargetRef:
     apiVersion: extensions/v1beta1
     kind: DeploymentConfig
     name: hotels
   targetCPUUtilizationPercentage: 10
# FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE 
#    FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE FUSE 
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      component: fuse
    name: fuse
  spec:
    ports:
    - port: 8182
      protocol: TCP
      targetPort: 8182
    selector:
      deploymentconfig: fuse
  sessionAffinity: None
  type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: fuse
    labels:
      component: fuse
  spec:
    to:
      kind: Service
      name: fuse
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      component: fuse
      container: java
      group: quickstarts
      project: fuse
      provider: s2i
      version: 2.2.0.redhat-079
    name: fuse
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      component: fuse
      container: java
      group: quickstarts
      project: fuse
      provider: s2i
      version: 2.2.0.redhat-079
    name: fuse
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: fuse:latest
    resources: {}
    source:
      contextDir: FuseTravelAgency
      git:
        ref: master
        uri: ${GOGS_URL}/${REPOSITORY_USER}/forum.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: BUILD_LOGLEVEL
          value: "5"
        - name: ARTIFACT_DIR
          value: ""
        - name: MAVEN_MIRROR_URL
          value: ${NEXUS_URL}/content/groups/forum
        - name: MAVEN_ARGS
          value: package -DskipTests -e
        - name: MAVEN_ARGS_APPEND
          value: ""
        forcePull: true
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:1.0
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: nMc0dfp8
      type: GitHub
    - generic:
        secret: nMc0dfp8
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      component: fuse
      container: java
      group: quickstarts
      project: fuse
      provider: s2i
      version: 2.2.0.redhat-079
    name: fuse
  spec:
    replicas: 1
    selector:
      component: fuse
      container: java
      deploymentconfig: fuse
      group: quickstarts
      project: fuse
      provider: s2i
      version: 2.2.0.redhat-079
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: fuse
          container: java
          deploymentconfig: fuse
          group: quickstarts
          project: fuse
          provider: s2i
          version: 2.2.0.redhat-079
      spec:
        containers:
        - image: library/fuse:latest
          name: fuse
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8182
            name: rest
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - (curl -f 127.0.0.1:8778) >/dev/null 2>&1; test 0 != 7
            initialDelaySeconds: 30
            timeoutSeconds: 5
          resources: {}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - fuse
        from:
          kind: ImageStreamTag
          name: fuse:latest
      type: ImageChange
  status: {}
